apiVersion: apps/v1
kind: Deployment
metadata:
  name: dbmanager-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dbmanager
  template:
    metadata:
      labels:
        app: dbmanager
    spec:
      # hostAliases:
      #   - ip: "192.168.137.35"
      #     hostnames:
      #       - "api.REPLACE_TARGET_USER.famquest.REPLACE_BASE_DOMAIN"
      #       - "minio.famquest.REPLACE_BASE_DOMAIN"
      #       - "minioapi.famquest.REPLACE_BASE_DOMAIN"
      #       - "portal.REPLACE_TARGET_USER.famquest.REPLACE_BASE_DOMAIN"
      imagePullSecrets:
        - name: gatewaysecrets
        - name: guigomchasecrets
      containers:
      - name: dbmanager
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        command: ["/bin/sh"]
        args: ["-c", "./dbmanager"]
        env:
          - name: SWAGGER_URL
            value: "api.REPLACE_TARGET_USER.famquest.REPLACE_BASE_DOMAIN"
          - name: SWAGGER_SCHEMA
            value: "https"
          - name: SWAGGER_BASE_PATH
            value: ""
          - name: SWAGGER_PORT
            value: "8080"
          - name: MINIO_URL
            value: "minioapi.famquest.REPLACE_BASE_DOMAIN"
          - name: MINIO_USER
            value: "REPLACE_TARGET_USER"
          - name: MINIO_PASSWORD
            value: "REPLACE_PASSWORD"
          - name: POSTGRES_DB_HOST
            value: "postgresql-svc.famquest"
          - name: POSTGRES_DB_PORT
            value: "5432"
          - name: DB_NAME
            value: REPLACE_TARGET_USER
        envFrom:
          - secretRef:
              name: postgres-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: dbmanager-svc
spec:
  selector:
    app: dbmanager
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
type: Opaque
stringData:
  POSTGRES_USER: REPLACE_USER
  POSTGRES_PASSWORD: REPLACE_PASSWORD
  POSTGRES_DB: REPLACE_TARGET_USER
